package matrixTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Matrix;
  private ConceptPresentation props_MatrixRow;
  private ConceptPresentation props_MyRoot;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Matrix:
        if (props_Matrix == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("[");
          props_Matrix = cpb.create();
        }
        return props_Matrix;
      case LanguageConceptSwitch.MatrixRow:
        if (props_MatrixRow == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MatrixRow");
          props_MatrixRow = cpb.create();
        }
        return props_MatrixRow;
      case LanguageConceptSwitch.MyRoot:
        if (props_MyRoot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MyRoot = cpb.create();
        }
        return props_MyRoot;
    }
    return null;
  }
}
